// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql" // 可以根据需要更改为 sqlite, mysql 等
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?   // 添加密码字段
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // 关联
  researches Research[]
  accounts   Account[]
  sessions   Session[]

  @@map("users")
}

// NextAuth 账户模型
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

// NextAuth 会话模型
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

// NextAuth 验证令牌模型
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// 研究报告模型 - 简化后的主要模型
model Research {
  id         String   @id @default(cuid())
  title      String   // 研究的标题
  question   Json?    // 存储问题的JSON数据
  related    Json?    // 存储相关研究的JSON数据
  files      Json?    // 存储文件信息的JSON数据
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // 关联
  userId  String?
  user    User?            @relation(fields: [userId], references: [id])
  results ResearchResult[] // 研究生成的结果

  @@map("researches")
}

// 研究结果模型
model ResearchResult {
  id              String    @id @default(cuid())
  version         Int       // 结果的版本号
  markdownContent String?   @db.Text
  summary         String?   @db.Text
  data            Json?     // 本次结果存储数据可视化内容的JSON数据
  sources         Json?    // 本次结果存储来源的JSON数据
  status          String?   // 研究的当前状态
  isComplete      Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // 关联
  researchId String?
  research   Research? @relation(fields: [researchId], references: [id])

  @@map("research_results")
}
